{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/untils.ts","src/wave.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","getColor","colorHex","color","that","test","aColor","replace","split","strHex","hex","Number","toString","aNum","numHex","colorRgb","opacity","sColor","toLowerCase","sColorNew","slice","concat","sColorChange","push","parseInt","join","untils_1","Wave","container","options","this","document","querySelector","Object","assign","number","smooth","velocity","height","colors","border","show","width","position","lines","frame","step","status","init","prototype","canvas","createElement","offsetWidth","offsetHeight","appendChild","ctx","getContext","setLines","animate","_this","clearRect","forEach","line","index","angle","Math","PI","leftHeight","sin","rightHeight","cos","fillStyle","rgba","beginPath","moveTo","lineWidth","strokeStyle","bezierCurveTo","stroke","lineTo","closePath","fill","requestAnimationFrame","pause","cancelAnimationFrame","setOptions","window","default"],"mappings":"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","file":"wave.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export function getColor(): Array<string> {\n  return ['rgba(162,237,246,.2)', 'rgba(31,166,196,.2)', 'rgba(13,71,130,.2)']\n}\n\n\nexport function colorHex(color:string):string {\n  var that = color\n  //十六进制颜色值的正则表达式\n  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n  // 如果是rgb颜色表示\n  if (/^(rgb|RGB)/.test(that)) {\n    var aColor = that.replace(/(?:\\(|\\)|rgb|RGB)*/g, \"\").split(\",\")\n    var strHex = \"#\"\n    for (var i = 0; i < aColor.length; i++) {\n      var hex = Number(aColor[i]).toString(16)\n      if (hex.length < 2) {\n        hex = '0' + hex\n      }\n      strHex += hex\n    }\n    if (strHex.length !== 7) {\n      strHex = that\n    }\n    return strHex\n  } else if (reg.test(that)) {\n    var aNum = that.replace(/#/, \"\").split(\"\")\n    if (aNum.length === 6) {\n      return that\n    } else if (aNum.length === 3) {\n      var numHex = \"#\"\n      for (var i = 0; i < aNum.length; i += 1) {\n        numHex += (aNum[i] + aNum[i])\n      }\n      return numHex\n    }\n  }\n  return that\n}\n\nexport function colorRgb(color:string,opacity:number):string {\n  var sColor = color.toLowerCase()\n  //十六进制颜色值的正则表达式\n  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n  // 如果是16进制颜色\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      var sColorNew = \"#\"\n      for (var i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n      }\n      sColor = sColorNew\n    }\n    //处理六位的颜色值\n    var sColorChange = []\n    for (var i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt(\"0x\" + sColor.slice(i, i + 2)))\n    }\n    return `rgba(${sColorChange.join(\",\")},${opacity})`\n  }\n  return sColor\n}\n","import {Core, Options} from \"./interface\";\nimport {getColor, colorHex, colorRgb} from \"./untils\"\n\nclass Wave implements Core {\n  container: HTMLElement\n  canvas: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  options: Options\n  lines: Array<{ hex: string, rgba: string }>\n  step: number\n  frame: number | null\n  status: 'animating' | 'pause'\n\n  constructor(container: string, options?: Options) {\n    const originOption = {\n      number: 3,\n      smooth: 50,\n      velocity: 1,\n      height: .5,\n      colors: ['#ff7657'],\n      border: {\n        show: false,\n        width: 2,\n        color: ''\n      },\n      opacity: .5,\n      position: 'bottom',\n    }\n\n    this.container = document.querySelector(container)\n    this.options = Object.assign(originOption, options)\n    this.lines = []\n    this.frame = null\n    this.step = 0\n    this.status = 'pause'\n\n    this.init()\n  }\n\n  init() {\n    if (this.container.querySelector('canvas') === null) {\n      const canvas = document.createElement('canvas')\n      canvas.width = this.container.offsetWidth\n      canvas.height = this.container.offsetHeight\n      this.container.appendChild(canvas)\n    }\n\n    this.canvas = this.container.querySelector('canvas')\n    this.ctx = this.canvas.getContext('2d')\n\n    this.setLines()\n  }\n\n  animate() {\n    this.status = 'animating'\n    const canvas = this.canvas\n    const ctx = this.ctx\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.step += this.options.velocity\n\n    this.lines.forEach((line, index) => {\n      const angle = (this.step + index * 180 / this.lines.length) * Math.PI / 180\n      const leftHeight = Math.sin(angle) * this.options.smooth\n      const rightHeight = Math.cos(angle) * this.options.smooth\n\n      ctx.fillStyle = line.rgba\n      ctx.beginPath()\n      ctx.moveTo(0, canvas.height * this.options.height + leftHeight)\n\n      if (this.options.border.show) {\n        ctx.lineWidth = this.options.border.width\n        ctx.strokeStyle = this.options.border.color ? this.options.border.color : line.hex\n      }\n\n      ctx.bezierCurveTo(canvas.width / 2,\n        canvas.height * this.options.height + leftHeight - this.options.smooth,\n        canvas.width / 2,\n        canvas.height * this.options.height + rightHeight - this.options.smooth,\n        canvas.width,\n        canvas.height * this.options.height + rightHeight)\n\n      if (this.options.border.show) {\n        ctx.stroke()\n      }\n      ctx.lineTo(canvas.width, canvas.height)\n      ctx.lineTo(0, canvas.height)\n      ctx.lineTo(0, canvas.height * this.options.height + leftHeight)\n      ctx.closePath()\n      ctx.fill()\n    })\n\n    var that = this;\n    this.frame = requestAnimationFrame(function () {\n      that.animate()\n    })\n\n  }\n\n  pause() {\n    cancelAnimationFrame(this.frame)\n    this.frame = null\n    this.status = 'pause'\n  }\n\n  setOptions() {\n\n    this.setLines()\n  }\n\n  setLines() {\n    for (let i = 0; i < this.options.number; i++) {\n      const color = this.options.colors[i % this.options.colors.length]\n      const line = {\n        hex: colorHex((<any>color)),\n        rgba: colorRgb((<any>color), this.options.opacity)\n      }\n      this.lines.push(line)\n    }\n  }\n}\n\n(<any>window).Wave = Wave\n\nexport default Wave\n"]}